// Generated using `moon info`, DON'T EDIT IT
package "xunyoyo/linalg/lib/matrix"

// Values
fn diag(Array[Double]) -> Matrix

fn diagonal(Matrix, offset? : Int) -> Array[Double]

fn eye(Int) -> Matrix

fn lstsq(Matrix, Matrix) -> Matrix raise

fn new_matrix(Array[Array[Double]], rows? : Int, cols? : Int) -> Matrix

fn solve(Matrix, Matrix) -> Matrix raise

fn zero(Int, Int) -> Matrix

// Errors
type MatrixShapeError
impl Show for MatrixShapeError

type SliceError
impl Show for SliceError

// Types and methods
pub struct Matrix {
  rows : Int
  cols : Int
  data : Array[Array[Double]]
}
fn Matrix::apply(Self, (Double) -> Double) -> Self
fn Matrix::approx_eq(Self, Self) -> Bool
fn Matrix::cholesky(Self) -> Self
fn Matrix::copy(Self) -> Self
fn Matrix::det(Self) -> Double
fn Matrix::det_Gauss(Self) -> Double
fn Matrix::dot(Self, Self) -> Double raise MatrixShapeError
fn Matrix::eigen(Self, max_iterations? : Int, tol? : Double) -> (Array[Double], Self) raise
fn Matrix::exchange_column(Self, Int, Int) -> Self
fn Matrix::exchange_row(Self, Int, Int) -> Self
fn Matrix::flat(Self) -> Self
fn Matrix::get(Self, Int, Int) -> Double
fn Matrix::inv(Self) -> Self raise
fn Matrix::k(Self, Double) -> Self
fn Matrix::new(Int, Int) -> Self
fn Matrix::norm(Self, ord? : NormType, axis? : Type) -> Double
fn Matrix::op_get(Self, Int) -> Array[Double]
fn Matrix::op_set(Self, Int, Array[Double]) -> Unit
fn Matrix::print(Self) -> Unit
fn Matrix::qr(Self) -> (Self, Self) raise
fn Matrix::rank(Self) -> Int
fn Matrix::reduced_row_echelon_form(Self) -> Self
fn Matrix::reshape(Self, Int, Int) -> Self
fn Matrix::shape(Self) -> (Int, Int)
fn Matrix::slice(Self, Int, Int, Int, Int) -> Self raise SliceError
fn Matrix::svd(Self) -> (Self, Self, Self) raise
fn Matrix::tr(Self) -> Double raise MatrixShapeError
fn Matrix::trace(Self, Int) -> Double
fn Matrix::transpose(Self) -> Self
fn Matrix::vdot(Self, Self) -> Double raise MatrixShapeError
impl Add for Matrix
impl Eq for Matrix
impl Mul for Matrix
impl Show for Matrix
impl Sub for Matrix
impl ToJson for Matrix

pub(all) enum NormType {
  Frobenius
  Infinity
  Zero
  One
  Two
  P(Double)
}

pub(all) enum Type {
  Matrix
  Vector
}

// Type aliases

// Traits

